{% import 'macro_functions.html.twig' as mf %}
{% extends 'layout_default.html.twig' %}
{% block meta_title %}
    {{ 'Proxmox Configuration Templates' | trans }}
{% endblock %}
{% set active_menu = 'proxmox' %}
{% block breadcrumbs %}
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="{{ '/'|alink }}">
                <svg class="icon">
                    <use xlink:href="#home" />
                </svg>
            </a>
        </li>
        <li class="breadcrumb-item">
            <a href="{{ 'serviceproxmox/templates'|alink }}">{{ 'Proxmox Configuration Templates'|trans }}</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Template {{vm_config_template.id}}</li>
    </ol>
{% endblock %}
{% block content %}
    <div class="card">
        <div class="card-header d-flex justify-content-between">
            <span></span> <!-- Empty for alignment purposes -->
            <div class="d-flex align-items-center">
                <span id="toggle-label" style="padding-right: 10px;">Show help</span>
                <label class="switch">
                    <input type="checkbox" id="slide-toggle">
                    <span class="slider round"></span>
                </label>
            </div>
        </div>

        <div class="card-body">
 
            <form method="post" action="admin/serviceproxmox/vm_template_update" class="api-form" data-api-redirect="{{ 'serviceproxmox/templates' | alink }}">
                <input type="hidden" name="CSRFToken" value="{{ CSRFToken }}" />
                <input type="hidden" name="id" id="vm_config_template_id" value="{{ vm_config_template.id }}" />
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Name' | trans }}:    
                    </label>
                    <div class="col">
                        <input class="form-control" type="text" name="name" value="{{vm_config_template.name}}" required placeholder="{{ 'Unique name to identify this template' | trans }}">
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Description' | trans }}:
                    </label>
                    <div class="col">
                        <input class="form-control" type="text-area" name="description" value="{{vm_config_template.description}}" required placeholder="{{ 'Description' | trans }}">
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'CPU Cores' | trans }}:                                                                    
                    </label>
                    <div class="col-md-5">
                            <input class="form-range" type="range" name="cpu_cores" value="{{vm_config_template.cores}}" min="1" max="128" step="1" oninput="cpuOutput.value = this.value+' Core(s)';">
                    </div>
                    <div class="col-md-2">
                        <output name="cpuOutput" for="cpu_cores">
                        {{vm_config_template.cores}} Core(s)
                        </output>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Memory' | trans }}:                                                                    
                    </label>
                    <div class="col-md-5">
                            <input class="form-range" type="range" name="vmmemory" value="{{vm_config_template.memory}}" min="1" max="128" step="1" oninput="vmmemoryOutput.value = this.value+' GB';">
                    </div>
                    <div class="col-md-2">
                        <output name="vmmemoryOutput" for="vmmemory">
                        {{vm_config_template.memory}} GB
                        </output>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Ballooning' | trans }}:                                                                            
                    </label>
                    <div class="col">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" id="radioBalloonYes" type="radio" name="balloon" value="1" {% if vm_config_template.balloon == '1' %} checked {% endif %}>                        
                        <label class="form-check-label" for="radioBalloonYes">
                            {{ 'Yes' | trans }}
                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" id="radioBalloonNo" type="radio" name="balloon" value="0"{% if vm_config_template.balloon == '0' %} checked {% endif %}> 
                        <label class="form-check-label" for="radioBalloonNo">
                            {{ 'No' | trans }}
                        </label>
                    </div>
                </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Ballooing Memory Size' | trans }}:                                                                                    
                    </label>
                    <div class="col-md-5">
                            <input class="form-range" type="range" name="balloon_size" value="{{vm_config_template.balloon_size}}" min="1" max="128" step="1" oninput="memoryOutput.value = this.value+' GB';">
                    </div>
                    <div class="col-md-2">
                        <output name="memoryOutput" for="balloon_size">
                            1 GB
                        </output>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'OS' | trans }}:
                    </label>
                    {% set os_list = admin.serviceproxmox_os_get_list() %}
                    <div class="col">
                        <select class="form-select" name="os">
                            {% for os in os_list %}
                            <option value="{{ os }}" {% if vm_config_template.os == os %} selected {% endif %}>{{ os }}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Bios Type' | trans }}:
                    </label>
                    {% set bios_list = admin.serviceproxmox_bios_get_list() %}
                    <div class="col">
                        <select class="form-select" name="bios">
                            {% for bios in bios_list %}
                            <option value="{{ bios }}" {% if vm_config_template.bios == bios %} selected {% endif %}>{{ bios }}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Start on boot' | trans }}:
                    </label>
                    <div class="col">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" id="radioOnbootYes" type="radio" name="onboot" value="1" {% if vm_config_template.onboot == '1' %} checked {% endif %}>
                        <label class="form-check-label" for="radioOnbootYes">
                            {{ 'Yes' | trans }}
                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" id="radioOnbootNo" type="radio" name="onboot" value="0" {% if vm_config_template.onboot == '0' %} checked {% endif %}>
                        <label class="form-check-label" for="radioOnbootNo">
                            {{ 'No' | trans }}
                        </label>
                    </div>
                </div>

                </div>
                <div class="mb-3 row">
                    <label class="form-label col-3 col-form-label">
                        {{ 'Qemu Guest Agent' | trans }}:
                    </label>
                    <div class="col">
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" id="radioAgentYes" type="radio" name="agent" value="1" {% if vm_config_template.agent == '1' %} checked {% endif %}>
                            <label class="form-check-label" for="radioAgentYes">
                                {{ 'Enabled' | trans }}
                            </label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" id="radioAgentNo" type="radio" name="agent" value="0" {% if vm_config_template.agent == '0' %} checked {% endif %}>
                            <label class="form-check-label" for="radioAgentNo">
                                {{ 'Disabled' | trans }}
                            </label>
                        </div>
                    </div>
                </div>
            
                <div class="card-body">
                            <!-- tabs for storage and drives -->
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link active" href="#tab-vm-storage" data-bs-toggle="tab">
                                    {{ 'Storage' | trans }}
                                </a>
                            </li>
                            <li class="nav-item" role="presentation" id='tab-new-vm-storage-btn'>
                                <a class="nav-link" href="#tab-new-vm-storage" data-bs-toggle="tab" >
                                    <svg class="icon me-2">
                                        <use xlink:href="#plus" />
                                    </svg>
                                    {{ 'New Storage' | trans }}
                                </a>
                            </li>
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" href="#tab-vm-cdrom" data-bs-toggle="tab">
                                    {{ 'Removable Storage' | trans }}
                                </a>
                            </li>
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" href="#tab-new-vm-cdrom" data-bs-toggle="tab">
                                    <svg class="icon me-2">
                                        <use xlink:href="#plus" />
                                    </svg>
                                    {{ 'New Removable Storage' | trans }}
                                </a>
                            </li>
                        </ul>    <div class="help-section d-none" style="padding-left:10px;padding-bottom:10px;">
                        <div style="padding-left:15px;padding-top:8px;padding-bottom:10px;">
                            Legend: &nbsp;
                            <svg class="icon">
                                <use xlink:href="#wifi" />
                            </svg>
                            Test Connection &nbsp;&nbsp;|&nbsp;&nbsp;
                            <svg class="icon">
                                <use xlink:href="#arrow-back-up" />
                            </svg>
                            Prepare Server &nbsp;&nbsp;|&nbsp;&nbsp;
                            <svg class="icon">
                                <use xlink:href="#edit" />
                            </svg>
                            Edit Server &nbsp;&nbsp;|&nbsp;&nbsp;
                            <svg class="icon">
                                <use xlink:href="#delete" />
                            </svg>
                            Delete Server
                        </div>
                    </div>
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="tab-vm-storage" role="tabpanel">
                                <div class="card-body">                                            
                                    <table class="table card-table table-vcenter table-striped table-responsive text-nowrap">
                                        <thead>
                                            <th >
                                                <td style="font-weight:bold;">Storage Type</td>
                                                <td style="font-weight:bold;">Size (GB)</td>
                                                <td style="font-weight:bold;">Controller</td>
                                                <th class="w-1"></th>
                                            </th>
                                        </thead>
                                        <tbody id='template-storage-list'>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-content">
                            <div class="tab-pane fade " id="tab-new-vm-storage" role="tabpanel">
                                <div class="card-body">                                            
                                <form id='vm-storage-create-form' method="post" action="admin/serviceproxmox/vm_template_update" class="api-form" data-api-redirect="{{ 'serviceproxmox/templates'|alink }}">
                                    <input type="hidden" name="CSRFToken" value="{{ CSRFToken }}" />
                                    <div class="mb-3 row">
                                        <label class="form-label col-3">Storage Type Tags:</label>
                                        <div class="col">
                                            <input type="text" name="storageTypeTags[]" id="storageTypeTags" multiple>
                                        </div>
                                    </div>
                            
                                
                                    <div class="mb-3 row">
                                        <label class="form-label col-3 col-form-label">
                                            {{ 'Size' | trans }}:                                                                    
                                        </label>
                                        <div class="col-md-5">
                                                <input class="form-range" type="range" name="storage_size" id="storage_size" value="1" min="50" max="2000" step="10" oninput="storage_sizeOutput.value = this.value+' GB';">
                                        </div>
                                        <div class="col-md-2">
                                            <output name="storage_sizeOutput" for="storage_size">
                                                50 GB
                                            </output>
                                        </div>
                                    </div>
                                    <div class="mb-3 row">
                                        <label class="form-label col-3 col-form-label">
                                            {{ 'Controller' | trans }}:                                                                    
                                        </label>
                                        {% set controllers = admin.serviceproxmox_storage_controller_get_list() %}
                                        <div class="col">
                                            <select name="controller" id="controller" class="form-select">
                                                {% for key, controller in controllers %}
                                                    <option value="{{ key }}">{{ controller }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <!-- Button to add the new storage to the list -->
                                    <button type="button" class="btn btn-primary" id='add-storage-btn'>Add Storage</button>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-end">
                            <a class="btn btn-error" href="{{ '/serviceproxmox/templates/disable'| alink }}/{{ vm_config_template.id }}">
                                <svg class="icon">
                                    <use xlink:href="#close" />
                                </svg>
                                {{ 'Disable' | trans }}&nbsp;&nbsp;
                            </a>
                            <a class="btn btn-success" href="{{ '/serviceproxmox/templates/enable'| alink }}/{{ vm_config_template.id }}">
                                <svg class="icon">
                                    <use xlink:href="#check" />
                                </svg>
                                {{ 'Enable' | trans }}&nbsp;&nbsp;
                            </a>
                            
                            <input type="submit" value="{{ 'Update VM Template' | trans }}" class="btn btn-primary">
                    </div>
            </form>
        </div>
    </div>

{% endblock %}
{% block js %}
<style>
    /* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 30px; /* Reduced size */
  height: 17px; /* Reduced size */
}

  
  /* Hide default HTML checkbox */
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  /* The slider */
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 13px; /* Reduced size */
  width: 13px; /* Reduced size */
  left: 2px; /* Adjusted positioning */
  bottom: 2px; /* Adjusted positioning */
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  input:checked + .slider {
    background-color: #2196F3;
  }
  
  input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
  }
  
  input:checked + .slider:before {
    -webkit-transform: translateX(13px); /* Adjusted slide distance */
  -ms-transform: translateX(13px); /* Adjusted slide distance */
  transform: translateX(13px); /* Adjusted slide distance */
  }
  
  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }
  
  .slider.round:before {
    border-radius: 50%;
  }
  .help-texts {
    color: #206BC4;
    font-style:italic;
}

</style>
    <script>

        function updateStorageTable() {
            const templateIdElem = document.getElementById('vm_config_template_id');
        
            if (!templateIdElem) {
                console.error("Element with id 'vm_config_template_id' not found!");
                return;
            }
        
            const templateId = templateIdElem.value;
        
            API.admin.post(
                'serviceproxmox/vm_config_template_get_storages', {
                    id: templateId
                },
                populateTable,
                handleError
            );
        }
        
        function deleteStorage(storageId) {
            API.admin.post(
                'serviceproxmox/vm_config_template_delete_storage', {
                    id: storageId
                },
                () => {
                    updateStorageTable(); 
                },
                handleError
            );
        }
        
        function populateTable(response) {
            const tableBody = document.getElementById("template-storage-list");
            tableBody.innerHTML = '';
            for (let key in response) {
                if (response.hasOwnProperty(key)) {
                    const storageData = response[key];
                    const row = document.createElement("tr");
                    row.id = "template-storage-list-row-" + storageData.id;
                    tableBody.appendChild(row);
        
                    row.appendChild(document.createElement("td"));
        
                    appendCellToRow(row, storageData.id, "storage-name", storageData.storage_type);
                    appendCellToRow(row, storageData.id, "storage-size", storageData.size + " GB");
                    appendCellToRow(row, storageData.id, "storage-controller", storageData.controller);
        
                    const actionsCell = appendCellToRow(row, storageData.id, "storage-actions", "");
                    appendActionButton(actionsCell, "edit", storageData.id);
                    appendActionButton(actionsCell, "delete", storageData.id);
                }
            }
        }
        
        function appendCellToRow(row, storageId, suffix, content) {
            const cell = document.createElement("td");
            cell.id = `template-storage-list-row-${storageId}-${suffix}`;
            cell.innerHTML = content;
            row.appendChild(cell);
            return cell;
        }
        
        function appendActionButton(cell, actionType, storageId) {
            const button = document.createElement("a");
            button.className = "btn btn-icon";
        
            if (actionType === "delete") {
                button.href = "javascript:void(0)";
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    deleteStorage(storageId);
                });
            } else {
                button.href = `/admin/serviceproxmox/vm_config_template_storage_edit/${storageId}`;
            }
        
            cell.appendChild(button);
        
            const img = document.createElement("img");
            img.className = "icon";
            img.src = `assets/icons/${actionType}.svg`;
            img.alt = `${actionType} icon`;
            button.appendChild(img);
        }
        
        function handleError(error) {
            console.error("API Error:", error);
        }
        
        document.getElementById('add-storage-btn').addEventListener('click', function() {
            saveStorage();
        });
        
        function saveStorage() {
        
            var template_id_v = document.getElementById('vm_config_template_id');
            var storage_size_v = document.getElementById('storage_size');
            var storage_controller_v = document.getElementById('controller');
            var storage_type_tags_v = document.getElementById('storageTypeTags');
        
            var data = {
                template_id: template_id_v.value,
                storage_size: storage_size_v.value,
                storage_controller: storage_controller_v.value,
                storage_type_tags: storage_type_tags_v.value
            };
        
            API.admin.post('serviceproxmox/vm_config_template_storage_create', data, (response) => {
                updateStorageTable()
            }, (response) => {
                console.log('Error occurred while saving storage: ' + response);
            });
        
        }
        $(document).ready(function() {
            var Type = "storage";
            var select = new TomSelect('#storageTypeTags', {
                plugins: ['remove_button'],
                create: true,
                delimiter: ',',
            });
        
            getTagsForType(Type, function(options) {
                select.addOption(options);
            });
            updateStorageTable();
        
            $('#slide-toggle').on('change', function() {
                $('.help-section').toggleClass('d-none');
        
                if ($('#slide-toggle').prop('checked')) {
                    $('#toggle-label').text('Hide help');
                } else {
                    $('#toggle-label').text('Show help');
                }
            });
        });
        
        function getTagsForType(Type, callback) {
            var options = [];
            API.admin.post("serviceproxmox/service_get_tags", {
                type: Type
            }, function(response) {
                for (var key in response) {
                    if (response.hasOwnProperty(key)) {
                        var option = {
                            value: response[key].id,
                            text: response[key].name
                        };
                        options.push(option);
                    }
                }
                callback(options);
            }, function(error) {
                console.log('Error occurred while getting tags: ' + error);
                callback(options);
            }, false);
        }
    </script>

{% endblock %}