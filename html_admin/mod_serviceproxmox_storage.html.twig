{% import 'macro_functions.html.twig' as mf %}
{% extends "layout_default.html.twig" %}
{% block meta_title %}
   {{ 'Manage Proxmox storage' | trans }}
{% endblock %}
{% set active_menu = 'system' %}
{% block breadcrumbs %}
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="{{ '/'|alink }}">
                <svg class="icon">
                    <use xlink:href="#home" />
                </svg>
            </a>
        </li>
        <li class="breadcrumb-item">
            <a href="{{ 'serviceproxmox'|alink }}">{{ 'Proxmox Servers'|trans }}</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">{{ storage.storage }}</li>
    </ol>
{% endblock %}
{% block content %}
         <div class="card">
         <div class="card-body">
             <h3>Manage Storage "{{ storage.storage }}"</h3>
         </div>
         <div class="row mb-3">
                 <div class="col-md-6">
                     <!-- Progress bar section -->
                     <div class="col-md-8" style="padding-left: 20px;">
                         <div class="progress" style="height: 20px;">
                             {% set usage_percent = (storage.used / storage.size * 100) | round(2) %}
                             {% if usage_percent < 50 %}
                                 {% set bar_color = "bg-success" %}
                             {% elseif usage_percent < 80 %}
                                 {% set bar_color = "bg-warning" %}
                             {% else %}
                                 {% set bar_color = "bg-danger" %}
                             {% endif %}
                             <div class="progress-bar {{ bar_color }} d-flex align-items-center justify-content-center" role="progressbar" style="width: {{ usage_percent }}%; font-weight: bold; font-size: 1rem;" aria-valuenow="{{ usage_percent }}" aria-valuemin="0" aria-valuemax="100">
                                 {{ usage_percent }}%
                             </div>
                         </div>
                     </div>
                 </div>
               </div>
         <div class="card-body">
         
         <!-- Additional Storage Details using a Table -->
         <table class="table table-borderless mb-3">
            <tbody>
                  <tr>
                     <th scope="row" style="width: 25%;">{{"Storage Name" | trans}}:</th>
                     <td>{{ storage.storage }}</td>
                     </tr>
                     <tr>
                     <th scope="row" style="width: 25%;">{{"Server" | trans}}:</th>
                     <td>{{ storage.server_name }}</td>
                  </tr>
                  <tr>
                     <th scope="row" style="width: 25%;">{{"Storage Type" | trans}}:</th>
                     <td>{{ storage.type }}</td>
                  </tr>
                  <tr>
                     <th scope="row" style="width: 25%;">{{"Content" | trans}}:</th>
                     <td>{{ storage.content }}</td>
                  </tr>
                  <tr>
                  <th scope="row" style="width: 25%;">{{"Usage" | trans}}:</th>
                  <td>{{ storage.used }} / {{ storage.size }} GB</td>
               </tr>
                  
            </tbody>
         </table>
             
             <!-- Progress bar for Storage Usage and its details -->
               
         <form method="post" action="admin/serviceproxmox/storage_update" id="storage-update" class="api-form" data-api-msg="storage updated">
            <input type="hidden" name="CSRFToken" value="{{ CSRFToken }}" />
            <input type="hidden" name="storageid" value="{{ storage.id }}" />
            <input type="hidden" name="storagetype" value="storage" />
            <div class="row mb-3">
               <label class="col-md-3 col-form-label">
                  Storage Classes
                                 
               </label>
               <div class="col-md-6">
                     <div class="col">
                     <input type="text" name="storageTypeTags[]" id="storageTypeTags" multiple>
                  </div>
               </div>
            </div>
            <!-- select Storageclass -->

            <input type="submit" value="{{ 'Update storage' | trans }}" class="btn btn-primary"></form>
         </div>
      </div>
   {% endblock %}
   {% block js %}
   <script src="{{ "Api/API.js?v=#{guest.system_version}" | library_url }}"></script>
   <script>
    $(document).ready(function() {
        var Type = "storage";
        var select = new TomSelect('#storageTypeTags', {
            plugins: ['remove_button', 'input_autogrow'],
            create: function(input, callback) {
                saveTagToDatabase(input, function(responseTag) {
                    callback({
                        value: responseTag.name,
                        text: responseTag.name
                    });
                });
            },
            delimiter: ',',
        });
    
        getTagsForType(Type, function(options) {
            select.addOption(options);
        });
    
        getTagsForStorage(function(options) {
            var formattedOptions = options.map(option => {
                return {
                    value: option.id,
                    text: option.name
                };
            });
    
            select.addOption(formattedOptions);
    
            options.forEach(option => {
                select.addItem(option.id);
            });
        });
    
    
    });
    
    function getTagsForType(Type, callback) {
        var options = [];
        API.admin.post("serviceproxmox/service_get_tags", {
            type: Type
        }, function(response) {
            for (var key in response) {
                if (response.hasOwnProperty(key)) {
                    var option = {
                        value: response[key].id,
                        text: response[key].name
                    };
                    options.push(option);
                }
            }
            callback(options);
        }, function(error) {
            console.log(`Error occurred while getting tags: ${error}`);
            callback(options);
        }, false);
    }
    
    function getTagsForStorage(callback) {
        const storage_id = $('input[name="storageid"]').val();
        API.admin.post('serviceproxmox/service_get_tags_by_storage', {
            storageid: storage_id
        }, (response) => {
            callback(response);
        }, (error) => {
            console.log(`Error occurred while getting tags: ${error}`);
            callback([]);
        }, false);
    }
    
    function saveTagToDatabase(tag, callback) {
        var Type = "storage";
        API.admin.post("serviceproxmox/service_add_tag", {
            type: Type,
            tag: tag
        }, (response) => {
            if (callback) {
                callback(response);
            }
        }, (error) => {
            console.log(`Error occurred while saving tag: ${error}`);
        }, false);
    }
   </script>


{% endblock %}
   